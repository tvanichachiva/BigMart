group_by(Item_Type) %>%
summarise(total_sales = sum(Item_Outlet_Sales)) %>%
arrange(desc(total_sales)) +
head(5)
top5_item_types
#Sales distribution for the top 5 Item Types
top5_item_types <- train %>%
group_by(Item_Type) %>%
summarise(total_sales = sum(Item_Outlet_Sales)) %>%
arrange(desc(total_sales)) %>%
head(5)
top5_item_types
#Sales distribution for the top 5 Item Types
top5_item_types <- train %>%
group_by(Item_Type) %>%
summarise(total_sales = sum(Item_Outlet_Sales)) %>%
arrange(desc(total_sales)) %>%
slice(1:5)
top5_item_types
top5_item_types %>%
ggplot(aes(total_sales)) +
geom_histogram(binwidth = 2) +
facet_wrap(~Item_Type)
top10_item_types <- train %>%
group_by(Item_Type) %>%
summarise(total_sales = sum(Item_Outlet_Sales)) %>%
arrange(desc(total_sales)) %>%
slice(1:10)
top10_item_types %>%
ggplot(aes(total_sales)) +
geom_histogram(binwidth = 2) +
facet_wrap(~Item_Type)
top10_item_types %>%
ggplot(aes(total_sales)) +
geom_histogram(binwidth = 2) +
facet_grid(~Item_Type)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type)
train %>%
select(Item_Type) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
distinct()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Outlet_Sales)) +
geom_histogram(binwidth = 2) +
facet_grid(~Item_Type)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Outlet_Sales)) +
geom_histogram(binwidth = 2) +
facet_wrap(~Item_Type)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Outlet_Sales)) +
geom_histogram() +
facet_wrap(~Item_Type, ncol = 2)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Outlet_Sales), color = "green") +
geom_histogram() +
facet_wrap(~Item_Type, ncol = 2)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Outlet_Sales), color = "green") +
geom_histogram() +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,sqrt(Item_Outlet_Sales)) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Outlet_Sales), color = "green") +
geom_histogram() +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,sqrt(Item_Outlet_Sales)) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales)), color = "green") +
geom_histogram() +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales)), color = "green") +
geom_histogram() +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales)), color = "green") +
geom_histogram(binwidth = 0.5) +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales)), color = "green") +
geom_histogram(binwidth = 5) +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales)), color = "green") +
geom_histogram(binwidth = 50) +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales)), color = "green") +
geom_histogram(binwidth = 15) +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Outlet_Sales), color = "green") +
geom_histogram(binwidth = 15) +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales)), fill = "green") +
geom_histogram(binwidth = 15) +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
geom_histogram(binwidth = 15, fill = "green") +
facet_wrap(~Item_Type, ncol = 5)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
geom_histogram(binwidth = 15, fill = "green") +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
geom_histogram(binwidth = 15, fill = Item_Type) +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
geom_histogram(binwidth = 15, colour = Item_Type) +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
geom_histogram(binwidth = 15, fill = Item_Type) +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
geom_histogram(binwidth = 15, fill = Item_Type) +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal() +
scale_color_brewer(palette = "Set1")
library(ggthemes)
install.packages(ggthemes)
install.packages("ggthemes")
library(ggthemes)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
geom_histogram(binwidth = 15, fill = Item_Type) +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal() +
scale_color_brewer(palette = "Set1")
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
geom_histogram(binwidth = 15) +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal() +
scale_color_brewer(palette = "Set1")
geom_histogram(binwidth = 15) +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
aes(fill = as.factor(Item_Type)) +
geom_histogram(binwidth = 15) +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
aes(fill = as.factor(Item_Type)) +
geom_histogram(binwidth = 15, alpha = 0.5) +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal()
train %>%
ggplot() +
geom_boxplot(Item_Type)
train %>%
ggplot() +
geom_boxplot(Item_Type)
train %>%
ggplot(aes(Item_Type)) +
geom_boxplot()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Type)) +
geom_boxplot()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type ="Canned") %>%
ggplot(aes(Item_Type)) +
geom_boxplot()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type == "Canned") %>%
ggplot(aes(Item_Type)) +
geom_boxplot()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Type, Item_Outlet_Sales)) +
geom_boxplot()
geom_boxplot()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Type, sqrt(Item_Outlet_Sales))) +
geom_boxplot()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(sqrt(Item_Outlet_Sales))) +
aes(fill = as.factor(Item_Type)) +
geom_histogram(binwidth = 15, alpha = 0.5) +
facet_wrap(~Item_Type, ncol = 5) +
theme_minimal()
train %>%
ggplot(aes(Item_Outlet_Sales)) +
geom_histogram(binwidth = 150, fill = "light green") +
theme_minimal()
summary(train)
summary(train$Item_Weight)
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Type, sqrt(Item_Outlet_Sales))) +
geom_boxplot()
train %>%
select(Item_Type,Item_Outlet_Sales) %>%
filter(Item_Type %in% top10_item_types$Item_Type) %>%
ggplot(aes(Item_Type, sqrt(Item_Outlet_Sales))) +
geom_boxplot() +
theme_minimal()
#Checking for continuous variables that might need to be imputed
summary(train)
#Replacing the 0's in Item Visibility with the average
#The dplyr method would be more readable
#Just practicing base R
train$Item_Visibility <- ifelse(train$Item_Visibility == 0, mean(train$Item_Visibility, na.rm = TRUE), train$Item_Visibility)
#Checking for continuous variables that might need to be imputed
summary(train)
train %>%
filter(is.na(Item_Weight))
#Item weight has 1463 NA values. Will replace these values with the average
train <- train %>%
filter(is.na(Item_Weight)) %>%
mutate(Item_Weight <- ifelse(is.na(Item_Weight),
mean(Item_Weight, na.rm = TRUE),
Item_Weight))
#Checking for continuous variables that might need to be imputed
summary(train)
train <- read_csv("Data/Train.csv")
#Replacing the 0's in Item Visibility with the average
#The dplyr method would be more readable
#Just practicing base R right now. In the next imputation I will use dplyr
train$Item_Visibility <- ifelse(train$Item_Visibility == 0, mean(train$Item_Visibility, na.rm = TRUE), train$Item_Visibility)
#Item weight has 1463 NA values. Will replace these values with the average
train <- train %>%
filter(is.na(Item_Weight)) %>%
mutate(Item_Weight <- mean(Item_Weight, na.rm = TRUE))
#Checking for continuous variables that might need to be imputed
summary(train)
train <- read_csv("Data/Train.csv")
#Checking for continuous variables that might need to be imputed
summary(train)
#Item weight has 1463 NA values. Will replace these values with the average
train <- train %>%
filter(is.na(Item_Weight)) %>%
mutate(Item_Weight = mean(Item_Weight, na.rm = TRUE))
#Checking for continuous variables that might need to be imputed
summary(train)
train <- read_csv("Data/Train.csv")
train %>%
filter(is.na(Item_Weight)) %>%
mutate(Item_Weight = mean(Item_Weight, na.rm = TRUE))
train %>%
group_by(Item_Weight)
mutate(Item_Weight = ifelse(is.na(Item_Weight),
mean(Item_Weight, na.rm = TRUE),
Item_Weight))
train %>%
group_by(Item_Weight) %>%
mutate(Item_Weight = ifelse(is.na(Item_Weight),
mean(Item_Weight, na.rm = TRUE),
Item_Weight))
#Checking for continuous variables that might need to be imputed
summary(train)
train$Item_Weight
#Item weight has 1463 NA values. Will replace these values with the average
train <-
train %>%
group_by(Item_Weight) %>%
mutate(Item_Weight = ifelse(is.na(Item_Weight),
mean(Item_Weight, na.rm = TRUE),
Item_Weight))
train <- read_csv("Data/Train.csv")
#Replacing the 0's in Item Visibility with the average
#The dplyr method would be more readable
#Just practicing base R right now. In the next imputation I will use dplyr
train$Item_Visibility <- ifelse(train$Item_Visibility == 0, mean(train$Item_Visibility, na.rm = TRUE), train$Item_Visibility)
#Checking for continuous variables that might need to be imputed
summary(train)
train %>%
mutate(Item_Weight = ifelse(is.na(Item_Weight),
mean(Item_Weight, na.rm = TRUE),
Item_Weight))
train <- train %>%
mutate(Item_Weight = ifelse(is.na(Item_Weight),
mean(Item_Weight, na.rm = TRUE),
Item_Weight))
#Checking for continuous variables that might need to be imputed
summary(train)
train <- train %>%
mutate(Item_Weight = case_when(is.na(Item_Weight) ~ mean(Item_Weight, na.rm = TRUE),
TRUE ~ Item_Weight))
#Checking for continuous variables that might need to be imputed
summary(train)
#Check the summary of the train DS agagin
summary(train)
train$Item_Identifier
#Creating an item_category field
train %>%
mutate(item_category = substr(Item_Identifier, 1, 2))
#Creating an item_category field
train %>%
mutate(item_category = substr(Item_Identifier, 1, 2), .before)
#Creating an item_category field
train %>%
mutate(item_category = substr(Item_Identifier, 1, 2), .before =1)
#Visualize count of sales by category
train %>% ggplot(aes(item_category)) + geom_bar()
train
train <- train %>%
mutate(item_category = substr(Item_Identifier, 1, 2), .before = 1)
#Visualize count of sales by category
train %>% ggplot(aes(item_category)) + geom_bar()
#Visualize count of sales by category
train %>% ggplot(aes(item_category)) + geom_bar() + facetwrap(~Item_Type, ncol = 1)
#Visualize count of sales by category
train %>% ggplot(aes(item_category)) + geom_bar() + facet_wrap(~Item_Type, ncol = 1)
#Visualize count of sales by category
train %>% ggplot(aes(item_category)) + geom_bar() + facet_wrap(~Item_Type, nrow = 1)
#Visualize count of sales by category
train %>% ggplot(aes(item_category)) +
geom_bar() +
coord_flip() +
facet_wrap(~Item_Type, nrow = 1)
#Visualize count of sales by category
train %>% ggplot(aes(item_category)) +
geom_bar() +
coord_flip() +
facet_wrap(~Item_Type, nrow = 1)
train %>% ggplot(aes(Item_Type)) +
geom_bar()
train %>% ggplot(aes(Item_Type)) +
geom_bar() +
coord_flip()
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, nrow = 1)
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1)
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type)) +
geom_bar(fill = Item_Type) +
coord_flip() +
facet_wrap(~item_category, ncol = 1)
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1)
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal()
install.packages("wesanderson")
library(wesanderson)
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal() +
scale_fill_manual(values=wes_palette(n=3, name="GrandBudapest"))
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal() +
scale_fill_manual(values=wes_palette(n=3, name="Moonrise1"))
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal() +
scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal() +
scale_color_manual(values=wes_palette(n=3))
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal() +
scale_color_manual(values=wes_palette(n=10, name="GrandBudapest"))
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal() +
scale_color_brewer(palette="Dark2")
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal() +
scale_fill_brewer(palette="Dark2")
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal() +
scale_fill_brewer(palette="Set3")
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal() +
scale_fill_brewer(palette="Spectral")
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal() +
#Sales distribution for the top 10 Item Types
top10_item_types <- train %>%
group_by(Item_Type) %>%
summarise(total_sales = sum(Item_Outlet_Sales)) %>%
arrange(desc(total_sales)) %>%
slice(1:10)
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal()
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal()
#Visualize count of sales by category
train %>% ggplot(aes(Item_Type, fill = Item_Type)) +
geom_bar() +
coord_flip() +
facet_wrap(~item_category, ncol = 1) +
theme_minimal()
